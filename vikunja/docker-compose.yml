version: "3.7"

services:

  db:
    image: postgres:13-alpine
    container_name: vikunja-db
    restart: unless-stopped
    networks:
      - vikunja
    environment:
      - POSTGRES_DB=${VIKUNJA_DB_NAME}
      - POSTGRES_USER=${VIKUNJA_DB_USER}
      - POSTGRES_PASSWORD=${VIKUNJA_DB_PASS}
    volumes:
      - ${DATA_PATH}/vikunja/db:/var/lib/postgresql/data
    labels:
      - traefik.enable=false
    healthcheck:
      test: pg_isready -U ${VIKUNJA_DB_USER} -d ${VIKUNJA_DB_NAME}
      interval: 10s
      timeout: 2s
      retries: 10

  api:
    image: vikunja/api:latest
    container_name: vikunja-api
    restart: unless-stopped
    networks:
      - proxy
      - vikunja
    depends_on:
      db:
        condition: service_healthy
    environment:
      - VIKUNJA_DATABASE_HOST=db
      - VIKUNJA_DATABASE_TYPE=postgres
      - VIKUNJA_DATABASE_USER=${VIKUNJA_DB_USER}
      - VIKUNJA_DATABASE_PASSWORD=${VIKUNJA_DB_PASS}
      - VIKUNJA_DATABASE_DATABASE=${VIKUNJA_DB_NAME}
    volumes:
      - ${DATA_PATH}/vikunja/api:/app/vikunja/files
    labels:
      - traefik.enable=true
      - traefik.http.routers.vikunjaAPI-rtr.entrypoints=websecure
      - traefik.http.routers.vikunjaAPI-rtr.rule=Host(`vikunja.${DOMAIN}`) && PathPrefix(`/api/v1`, `/dav/`, `/.well-known/`)

  frontend:
    image: vikunja/frontend:latest
    container_name: vikunja-frontend
    restart: unless-stopped
    networks:
      - proxy
    labels:
      - traefik.enable=true
      - traefik.http.routers.vikunjaWeb-rtr.entrypoints=websecure, expose
      - traefik.http.routers.vikunjaWeb-rtr.rule=Host(`vikunja.${DOMAIN}`)
      - traefik.http.routers.vikunjaWeb-rtr.service=vikunjaWeb-svc
      - traefik.http.services.vikunjaWeb-svc.loadbalancer.server.port=80

networks:
  vikunja:
    name: vikunja
  proxy:
    external: true
